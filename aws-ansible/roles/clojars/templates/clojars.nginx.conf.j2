# {{ ansible_managed }}

# Set up rate limiting for login. This will allow a request every
# second for a single IP address for routes using limit_req. Any
# requests beyond that limit will return a 429.
limit_req_zone $binary_remote_addr zone=rate_limit_login:10m rate=1r/s;
limit_req_status 429;

# Set up rate limiting for forgot-password. This will allow five
# requests every minute (one every 12 seconds) for a single IP address
# for routes using limit_req. Any requests beyond that limit will
# return a 429 (inherited from the above limit_req_status directive).
limit_req_zone $binary_remote_addr zone=rate_limit_forgot_pw:10m rate=5r/m;

upstream clojars-web {
  server localhost:8001 max_fails=3;
}

server {
  listen [::]:80 ipv6only=off default_server;        
  access_log  /var/log/nginx/clojars.access.log main;
  root /var/www/clojars;
    
  add_header Strict-Transport-Security "max-age=31536000";

  error_page 502 =503 /502.html;

  location / {
    try_files $uri @clojars_webapp;
  }

  location /stylesheets {
    expires 4h;
    proxy_pass http://clojars-web;
    add_header Content-Type text/css;
  }

  location /images {
    expires 7d;
    proxy_pass http://clojars-web;
  }

  location /images/clojars-logo-big.png {
    return 301 https://clojars.org/images/clojars-logo@2x.png;
  }

  location /repo/quantum/datomic-pro {
    return 451;
  }

  location /repo {
    root /home/clojars;
    autoindex on;
    expires 1w;
    log_not_found off;
    client_max_body_size 30m;
    limit_except GET HEAD {
      # send uploads to webapp
      proxy_pass http://clojars-web;
    }

    if ($request_method ~ "GET|HEAD") {
      rewrite ^/repo$ https://repo.clojars.org redirect;
      rewrite ^/repo/(.*)$ https://repo.clojars.org/$1 redirect;
    }

    # nested location blocks inherit the above settings except for proxy_pass
    # and the conditional rewrites, so we have to duplicate them
    location /repo/afterglow/afterglow {
       client_max_body_size 50m;
       limit_except GET HEAD {
         # send uploads to webapp
         proxy_pass http://clojars-web;
       }

       if ($request_method ~ "GET|HEAD") {
          rewrite ^/repo$ https://repo.clojars.org redirect;
          rewrite ^/repo/(.*)$ https://repo.clojars.org/$1 redirect;
       }
    }

    location /repo/io.github.pfeodrippe/vybe {
       client_max_body_size 60m;
       limit_except GET HEAD {
         # send uploads to webapp
         proxy_pass http://clojars-web;
       }

       if ($request_method ~ "GET|HEAD") {
          rewrite ^/repo$ https://repo.clojars.org redirect;
          rewrite ^/repo/(.*)$ https://repo.clojars.org/$1 redirect;
       }
    }

    location /repo/opencv-native {
       client_max_body_size 100m;
       limit_except GET HEAD {
         # send uploads to webapp
         proxy_pass http://clojars-web;
       }

       if ($request_method ~ "GET|HEAD") {
          rewrite ^/repo$ https://repo.clojars.org redirect;
          rewrite ^/repo/(.*)$ https://repo.clojars.org/$1 redirect;
       }
    }


  }

  location /login {
    # rate-limit login requests, but allow up to 5 requests before
    # rate-limiting kicks in. Those 5 requests will be limited to 1/s
    # by essentially sleeping eavh request to match the rate-limit rate.
    limit_req zone=rate_limit_login burst=5;

    proxy_set_header Host $host;
    proxy_pass http://clojars-web;
  }

  # prevent excessive password reset requests as a spam vector
  location /forgot-password {
    # rate-limit forgot-password requests, but allow up to 5 requests
    # before rate-limiting kicks in. Don't delay those five requests.
    limit_req zone=rate_limit_forgot_pw burst=5 nodelay;

    proxy_set_header Host $host;
    proxy_pass http://clojars-web;
  }

  location @clojars_webapp {
    proxy_set_header Host $host;
    proxy_pass http://clojars-web;
    # This rewrites Location headers to be https instead of http
    proxy_redirect http: https:;
  }

  location /stats {
    rewrite ^/stats$ https://repo.clojars.org/stats/ redirect;
    rewrite ^/stats/(.*)$ https://repo.clojars.org/stats/$1 redirect;
  }

  location = /robots.txt { root /var/www/clojars; }
  location = /google965fb6af102ec54f.html { root /var/www/clojars; }
}
